{"version":3,"sources":["scripts/main.js"],"names":["baseURL","detailsURL","request","url","Promise","resolve","reject","fetch","then","response","ok","headers","get","includes","json","Error","status","statusText","result","catch","error","console","warn","setTimeout","getPhones","getPhonesDetails","phoneId","getDetails","phones","all","map","phone","id","details","displayData","combine","phoneDetails","find","detail","data","container","document","createElement","className","body","appendChild","card","innerHTML","createDetailsText","Object","entries","reduce","detailsText","key","value","newText"],"mappings":"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","file":"main.c01fb81e.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst baseURL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst detailsURL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\n\nconst request = (url) => {\n  return new Promise((resolve, reject) => {\n    fetch(url)\n      .then(response => {\n        if (!response.ok) {\n          return Promise.reject(\n            new Error(`${response.status} - ${response.statusText}`)\n          );\n        }\n\n        if (!response.headers.get('content-type')\n          .includes('application/json')) {\n          return Promise.reject(\n            new Error(`Content type is not supported`)\n          );\n        }\n\n        return response.json();\n      })\n      .then(result => {\n        resolve(result);\n      })\n      .catch(error => {\n        // eslint-disable-next-line\n        console.warn('Error:', error);\n      });\n\n    setTimeout(() => reject(new Error('Timeout error')), 5000);\n  });\n};\n\nfunction getPhones() {\n  return request(baseURL);\n}\n\nfunction getPhonesDetails(phoneId) {\n  return request(`${detailsURL}/${phoneId}.json`);\n}\n\nfunction getDetails(phones) {\n  Promise.all(phones.map(phone => getPhonesDetails(phone.id)))\n    .then((details) => {\n      const phonesWithDetails = combine(phones, details);\n\n      displayData(phonesWithDetails);\n    })\n    .catch((error) => {\n      // eslint-disable-next-line\n      console.warn('Error:', error);\n    });\n};\n\nfunction combine(phones, details) {\n  return phones.map(phone => {\n    const phoneDetails = details.find(detail => detail.id === phone.id);\n\n    return {\n      ...phone,\n      ...phoneDetails,\n    };\n  });\n};\n\nfunction displayData(data) {\n  const container = document.createElement('div');\n\n  container.className = 'container';\n  document.body.appendChild(container);\n\n  data.map(phone => {\n    const card = document.createElement('div');\n\n    card.className = 'container__item';\n    card.innerHTML = phone.id;\n    container.appendChild(card);\n\n    const details = document.createElement('div');\n\n    details.className = 'container__details';\n    details.innerHTML = createDetailsText(phone);\n    container.appendChild(details);\n  });\n};\n\nfunction createDetailsText(phone) {\n  return Object.entries(phone).reduce((detailsText, [key, value]) => {\n    let newText = detailsText;\n\n    if (typeof value !== 'object') {\n      newText += `${key}: ${value}<br/>`;\n    }\n\n    return newText;\n  }, '');\n};\n\ngetPhones(baseURL)\n  .then((result) => {\n    getDetails(result);\n  })\n  .catch((error) => {\n    // eslint-disable-next-line\n    console.warn('Error while fetching data', error);\n  });\n"]}